/* SIE CONFIDENTIAL
ORBIS Programmer Tool Runtime Library Release 00.910.020
* Copyright (C) 2012 Sony Interactive Entertainment Inc.
* All Rights Reserved.
*/

struct VS_OUTPUT
{
    float4 Position     : S_POSITION;
    float2 Texcoord     : TEXCOORD0;
};


SamplerState texState : register(s0);
Texture2D tex : register( t0 );
float4 colorCoeff;
float2 texSize;

float4 main(VS_OUTPUT input 
	) : S_TARGET_OUTPUT

{
	float4 col;
	{
//	    float2 texSize;
//      tex.GetDimensions(texSize.x, texSize.y);
		float4 texel = tex.Sample(texState, input.Texcoord);
		float2 texcoord = input.Texcoord * texSize;
		float y = (frac(texcoord.x) < 0.5) ? texel.x : texel.z;
		float u = texel.y;
		float v = texel.w;
		float3 yubof = float3(0.0, -0.5, -0.5);
		float3 yuv2r = float3(1.0,  0.000,  1.402);
		float3 yuv2g = float3(1.0, -0.344, -0.714);
		float3 yuv2b = float3(1.0,  1.772,  0.000);
		float3 yuv = float3(y, u, v);
		yuv += yubof;
		col.r = dot(yuv, yuv2r);
		col.g = dot(yuv, yuv2g);
		col.b = dot(yuv, yuv2b);
		col.a = 1.0;
	}
	return col * colorCoeff;
}

