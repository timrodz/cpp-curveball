/* SIE CONFIDENTIAL
 * PlayStation(R)4 Programmer Tool Runtime Library Release 04.508.001
 * Copyright (C) 2012 Sony Interactive Entertainment Inc. 
 * All Rights Reserved.
 */

#include "shader_base.h"

/* data passed from vertex shader to pixel shader */
struct vertexOutput {
    float4 HPosition	: S_POSITION;
    float3 LightVec	    : TEXCOORD5;
    float3 WorldNormal	: TEXCOORD6;
    float3 WorldView	: TEXCOORD7;
};
 
///////// Vertex SHADING /////////////////////

/*********** Generic Vertex Shader ******/


vertexOutput main(  float3 aPosition	: POSITION,
                    float3 aNormal	: NORMAL,
	                uniform row_major matrix WorldInverseTranspose,
                    uniform row_major matrix WorldViewProjection,
                    uniform row_major matrix World, 
                    uniform row_major matrix ViewInverse,
					uniform float3   lightPosition
                    ) 
{
    vertexOutput OUT;
    float4 LocalPosition = float4(aPosition, 1.f);

	OUT.WorldNormal      = mul(WorldInverseTranspose, float4(aNormal, 0.f)).xyz;

    float3 WorldPosition = mul(World, LocalPosition).xyz;
    OUT.LightVec         = (lightPosition - WorldPosition);
	OUT.WorldView		 = normalize( float3(ViewInverse[0].w, ViewInverse[1].w, ViewInverse[2].w) - WorldPosition);
    OUT.HPosition        = mul(WorldViewProjection, LocalPosition);
    return OUT;
}


